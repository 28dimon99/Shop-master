{"ast":null,"code":"import { connect } from \"react-redux\";\nimport orderBy from 'lodash/orderBy';\nimport { setPhone } from \"./redux/phoneReducer\";\nimport { setFilter } from \"./redux/filterReducer\";\nimport App from \"./App\"; //фильтрация\n\nconst sortBy = (phoneReducer, filterBy, searchQuery) => {\n  switch (filterBy) {\n    case 'priceHigh':\n      return orderBy(phoneReducer, 'price', 'desc');\n\n    case 'priceLow':\n      return orderBy(phoneReducer, 'price', 'asc');\n\n    case 'model':\n      return orderBy(phoneReducer, 'model', 'desc');\n\n    default:\n      return phoneReducer;\n  }\n};\n/*//Если сортировка прошла фильтруем товары\r\nconst filterPhones = (phoneReducer, searchQuery) =>\r\n    phoneReducer.filterReducer(\r\n        o =>\r\n            o.brand.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\r\n            o.model.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0,\r\n    );*/\n\n\nconst mapStateToProps = state => ({\n  phones: sortBy(state.phoneReducer.items, state.filterReducer.filterBy),\n  isReady: state.phoneReducer.isReady\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPhone: phones => dispatch(setPhone(phones)),\n  setFilter: filter => dispatch(setFilter(filter))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Dima/WebstormProjects/MyNewProject/phones/Shop-master/src/AppContainer.js"],"names":["connect","orderBy","setPhone","setFilter","App","sortBy","phoneReducer","filterBy","searchQuery","mapStateToProps","state","phones","items","filterReducer","isReady","mapDispatchToProps","dispatch","filter"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAACC,YAAD,EAAeC,QAAf,EAAyBC,WAAzB,KAAyC;AACpD,UAAQD,QAAR;AACI,SAAK,WAAL;AACI,aAAON,OAAO,CAACK,YAAD,EAAe,OAAf,EAAwB,MAAxB,CAAd;;AACJ,SAAK,UAAL;AACI,aAAOL,OAAO,CAACK,YAAD,EAAe,OAAf,EAAwB,KAAxB,CAAd;;AACJ,SAAK,OAAL;AACI,aAAOL,OAAO,CAACK,YAAD,EAAe,OAAf,EAAwB,MAAxB,CAAd;;AACJ;AACI,aAAOA,YAAP;AARR;AAUH,CAXD;AAYA;;;;;;;;;AAQA,MAAMG,eAAe,GAAIC,KAAD,KAAU;AAC9BC,EAAAA,MAAM,EAAEN,MAAM,CAACK,KAAK,CAACJ,YAAN,CAAmBM,KAApB,EAA2BF,KAAK,CAACG,aAAN,CAAoBN,QAA/C,CADgB;AAE9BO,EAAAA,OAAO,EAAEJ,KAAK,CAACJ,YAAN,CAAmBQ;AAFE,CAAV,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCd,EAAAA,QAAQ,EAAES,MAAM,IAAIK,QAAQ,CAACd,QAAQ,CAACS,MAAD,CAAT,CADU;AAEtCR,EAAAA,SAAS,EAAEc,MAAM,IAAID,QAAQ,CAACb,SAAS,CAACc,MAAD,CAAV;AAFS,CAAf,CAA3B;;AAOA,eAAejB,OAAO,CAACS,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["\r\nimport {connect} from \"react-redux\";\r\nimport orderBy from 'lodash/orderBy';\r\nimport {setPhone} from \"./redux/phoneReducer\";\r\nimport {setFilter} from \"./redux/filterReducer\";\r\nimport App from \"./App\";\r\n\r\n//фильтрация\r\nconst sortBy = (phoneReducer, filterBy, searchQuery) => {\r\n    switch (filterBy) {\r\n        case 'priceHigh':\r\n            return orderBy(phoneReducer, 'price', 'desc');\r\n        case 'priceLow':\r\n            return orderBy(phoneReducer, 'price', 'asc');\r\n        case 'model':\r\n            return orderBy(phoneReducer, 'model', 'desc');\r\n        default:\r\n            return phoneReducer\r\n    }\r\n};\r\n/*//Если сортировка прошла фильтруем товары\r\nconst filterPhones = (phoneReducer, searchQuery) =>\r\n    phoneReducer.filterReducer(\r\n        o =>\r\n            o.brand.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\r\n            o.model.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0,\r\n    );*/\r\n\r\nconst mapStateToProps = (state)=>({\r\n    phones: sortBy(state.phoneReducer.items, state.filterReducer.filterBy),\r\n    isReady: state.phoneReducer.isReady\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setPhone: phones => dispatch(setPhone(phones)),\r\n    setFilter: filter => dispatch(setFilter(filter))\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}