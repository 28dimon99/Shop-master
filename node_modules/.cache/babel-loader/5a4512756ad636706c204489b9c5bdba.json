{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima\\\\WebstormProjects\\\\MyNewProject\\\\phones\\\\Shop-master\\\\src\\\\App.js\";\nimport React, { Component, useEffect } from 'react';\nimport './App.css';\nimport * as axios from \"axios/index\";\nimport { connect } from \"react-redux\";\nimport Menu from \"./components/Menu/Menu\";\nimport PhoneCard from \"./components/PhoneCard/PhoneCard\";\nimport { Container, Card } from \"semantic-ui-react\";\nimport { setPhone } from \"./redux/phoneReducer\";\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      setPhone\n    } = this.props;\n    axios.get('http://localhost:3000/phones').then(response => {\n      setPhone(response.data);\n    });\n  }\n  /*  shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (this.props.phones !== nextProps.phones) {\n            return true\n        }\n        else if(this.props.state !== nextState.state){\n            return true\n        }\n    }*/\n\n\n  render() {\n    const {\n      phones,\n      isReady\n    } = this.props;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card.Group, {\n      itemsPerRow: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, !isReady ? 'Загрузка...' : phones && phones.map(p =>\n    /*#__PURE__*/\n\n    /*<PhoneCard {...p}/>*/\n    React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, p.brand), \" - \", p.model))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  phones: state.phoneReducer.items,\n  isReady: state.phoneReducer.isReady\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPhone: phones => dispatch(setPhone(phones))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Dima/WebstormProjects/MyNewProject/phones/Shop-master/src/App.js"],"names":["React","Component","useEffect","axios","connect","Menu","PhoneCard","Container","Card","setPhone","App","componentDidMount","props","get","then","response","data","render","phones","isReady","console","log","map","p","brand","model","mapStateToProps","state","phoneReducer","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,mBAA9B;AACA,SAAQC,QAAR,QAAuB,sBAAvB;;AAIA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxBU,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACF,MAAAA;AAAD,QAAa,KAAKG,KAAxB;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAA+CC,QAAQ,IAAI;AAEvDN,MAAAA,QAAQ,CAACM,QAAQ,CAACC,IAAV,CAAR;AACH,KAHD;AAIH;AAEH;;;;;;;;;;AASEC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAoB,KAAKP,KAA/B;AACRQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACQ,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACO,OAAD,GACK,aADL,GAGGD,MAAM,IAAIA,MAAM,CAACI,GAAP,CAAWC,CAAC;AAAA;;AACtB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,CAAC,CAACC,KAAN,CADJ,SACwBD,CAAC,CAACE,KAD1B,CAFU,CAJlB,CAFJ,CADJ;AAgBH;;AArCuB;;AAuC5B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,MAAM,EAAES,KAAK,CAACC,YAAN,CAAmBC,KADK;AAEhCV,EAAAA,OAAO,EAAEQ,KAAK,CAACC,YAAN,CAAmBT;AAFI,CAAZ,CAAxB;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACtCtB,EAAAA,QAAQ,EAAES,MAAM,IAAIa,QAAQ,CAACtB,QAAQ,CAACS,MAAD,CAAT;AADU,CAAf,CAA3B;;AAKA,eAAed,OAAO,CAACsB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,GAA7C,CAAf","sourcesContent":["import React, {Component, useEffect} from 'react';\nimport './App.css';\nimport * as axios from \"axios/index\"\n\nimport {connect} from \"react-redux\";\nimport Menu from \"./components/Menu/Menu\";\nimport PhoneCard from \"./components/PhoneCard/PhoneCard\";\nimport {Container, Card} from \"semantic-ui-react\";\nimport {setPhone} from \"./redux/phoneReducer\";\n\n\n\nclass App extends Component {\n    componentDidMount() {\n        const {setPhone} = this.props;\n        axios.get('http://localhost:3000/phones').then(response => {\n           \n            setPhone(response.data)\n        });\n    }\n\n  /*  shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (this.props.phones !== nextProps.phones) {\n            return true\n        }\n        else if(this.props.state !== nextState.state){\n            return true\n        }\n    }*/\n\n    render() {\n        const {phones, isReady} = this.props\nconsole.log(this.props);\n        return (\n            <Container>\n                    <Menu/>\n                <Card.Group itemsPerRow={4}>\n                    {!isReady\n                        ? 'Загрузка...'\n                        :\n                        phones && phones.map(p => (\n                        /*<PhoneCard {...p}/>*/\n                        <li>\n                            <b>{p.brand}</b> - {p.model}\n                        </li>\n                    ))}\n                </Card.Group>\n            </Container>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    phones: state.phoneReducer.items,\n    isReady: state.phoneReducer.isReady,\n\n\n});\nconst mapDispatchToProps = (dispatch) => ({\n    setPhone: phones => dispatch(setPhone(phones)),\n\n\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}