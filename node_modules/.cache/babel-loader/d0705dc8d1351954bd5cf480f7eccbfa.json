{"ast":null,"code":"import { connect } from \"react-redux\";\nimport orderBy from 'lodash/orderBy';\nimport { setPhone } from \"./redux/phoneReducer\";\nimport { setFilter, setSearchQuery } from \"./redux/filterReducer\";\nimport App from \"./App\"; //фильтрация\n\nconst sortBy = (phoneReducer, filterBy, searchQuery) => {\n  switch (filterBy) {\n    case 'priceHigh':\n      return orderBy(phoneReducer, 'price', 'desc');\n\n    case 'priceLow':\n      return orderBy(phoneReducer, 'price', 'asc');\n\n    case 'model':\n      return orderBy(phoneReducer, 'model', 'desc');\n\n    default:\n      return phoneReducer;\n  }\n}; //Если сортировка прошла фильтруем товары\n\n\nconst filterPhones = (phoneReducer, searchQuery) => phoneReducer.filterReducer(o => o.brand.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 || o.model.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0); //Поиск товаров\n\n\nconst searchPhones = (phoneReducer, filterBy, searchQuery) => {\n  return sortBy(filterPhones(phoneReducer, searchQuery));\n};\n\nconst mapStateToProps = state => ({\n  phones: searchPhones(state.phoneReducer.items && state.phoneReducer.items, state.filterReducer.filterBy, state.filterReducer.searchQuery),\n  isReady: state.phoneReducer.isReady\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPhone: phones => dispatch(setPhone(phones)),\n  setFilter: filter => dispatch(setFilter(filter)),\n  setSearchQuery: value => dispatch(setSearchQuery(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Dima/WebstormProjects/MyNewProject/phones/Shop-master/src/AppContainer.js"],"names":["connect","orderBy","setPhone","setFilter","setSearchQuery","App","sortBy","phoneReducer","filterBy","searchQuery","filterPhones","filterReducer","o","brand","toLowerCase","indexOf","model","searchPhones","mapStateToProps","state","phones","items","isReady","mapDispatchToProps","dispatch","filter","value"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,QAAwC,uBAAxC;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAACC,YAAD,EAAeC,QAAf,EAAyBC,WAAzB,KAAyC;AACpD,UAAQD,QAAR;AACI,SAAK,WAAL;AACI,aAAOP,OAAO,CAACM,YAAD,EAAe,OAAf,EAAwB,MAAxB,CAAd;;AACJ,SAAK,UAAL;AACI,aAAON,OAAO,CAACM,YAAD,EAAe,OAAf,EAAwB,KAAxB,CAAd;;AACJ,SAAK,OAAL;AACI,aAAON,OAAO,CAACM,YAAD,EAAe,OAAf,EAAwB,MAAxB,CAAd;;AACJ;AACI,aAAOA,YAAP;AARR;AAUH,CAXD,C,CAYA;;;AACA,MAAMG,YAAY,GAAG,CAACH,YAAD,EAAeE,WAAf,KACjBF,YAAY,CAACI,aAAb,CACIC,CAAC,IACGA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,OAAtB,CAA8BN,WAAW,CAACK,WAAZ,EAA9B,KAA4D,CAA5D,IACAF,CAAC,CAACI,KAAF,CAAQF,WAAR,GAAsBC,OAAtB,CAA8BN,WAAW,CAACK,WAAZ,EAA9B,KAA4D,CAHpE,CADJ,C,CAMA;;;AACA,MAAMG,YAAY,GAAG,CAACV,YAAD,EAAeC,QAAf,EAAyBC,WAAzB,KAAuC;AACxD,SAAOH,MAAM,CAACI,YAAY,CAACH,YAAD,EAAeE,WAAf,CAAb,CAAb;AACH,CAFD;;AAIA,MAAMS,eAAe,GAAIC,KAAD,KAAU;AAC9BC,EAAAA,MAAM,EAAEH,YAAY,CAACE,KAAK,CAACZ,YAAN,CAAmBc,KAAnB,IAA4BF,KAAK,CAACZ,YAAN,CAAmBc,KAAhD,EAAuDF,KAAK,CAACR,aAAN,CAAoBH,QAA3E,EAAqFW,KAAK,CAACR,aAAN,CAAoBF,WAAzG,CADU;AAE9Ba,EAAAA,OAAO,EAAEH,KAAK,CAACZ,YAAN,CAAmBe;AAFE,CAAV,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCtB,EAAAA,QAAQ,EAAEkB,MAAM,IAAII,QAAQ,CAACtB,QAAQ,CAACkB,MAAD,CAAT,CADU;AAEtCjB,EAAAA,SAAS,EAAEsB,MAAM,IAAID,QAAQ,CAACrB,SAAS,CAACsB,MAAD,CAAV,CAFS;AAGtCrB,EAAAA,cAAc,EAAEsB,KAAK,IAAIF,QAAQ,CAACpB,cAAc,CAACsB,KAAD,CAAf;AAHK,CAAf,CAA3B;;AAQA,eAAe1B,OAAO,CAACkB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,GAA7C,CAAf","sourcesContent":["\r\nimport {connect} from \"react-redux\";\r\nimport orderBy from 'lodash/orderBy';\r\nimport {setPhone} from \"./redux/phoneReducer\";\r\nimport {setFilter, setSearchQuery} from \"./redux/filterReducer\";\r\nimport App from \"./App\";\r\n\r\n//фильтрация\r\nconst sortBy = (phoneReducer, filterBy, searchQuery) => {\r\n    switch (filterBy) {\r\n        case 'priceHigh':\r\n            return orderBy(phoneReducer, 'price', 'desc');\r\n        case 'priceLow':\r\n            return orderBy(phoneReducer, 'price', 'asc');\r\n        case 'model':\r\n            return orderBy(phoneReducer, 'model', 'desc');\r\n        default:\r\n            return phoneReducer\r\n    }\r\n};\r\n//Если сортировка прошла фильтруем товары\r\nconst filterPhones = (phoneReducer, searchQuery) =>\r\n    phoneReducer.filterReducer(\r\n        o =>\r\n            o.brand.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\r\n            o.model.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0,\r\n    );\r\n//Поиск товаров\r\nconst searchPhones = (phoneReducer, filterBy, searchQuery)=>{\r\n    return sortBy(filterPhones(phoneReducer, searchQuery))\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    phones: searchPhones(state.phoneReducer.items && state.phoneReducer.items, state.filterReducer.filterBy, state.filterReducer.searchQuery ),\r\n    isReady: state.phoneReducer.isReady\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setPhone: phones => dispatch(setPhone(phones)),\r\n    setFilter: filter => dispatch(setFilter(filter)),\r\n    setSearchQuery: value => dispatch(setSearchQuery(value))\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}